annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=PPMaJal2 is the java library for reasoning over hybrid problems. The library includes a number of runner files which all share the common framework\nof a language for reasoning about actions. The language adopted is an extended (for some regard) version of PDDL+. \nThere are several kind of reasoning mechanism spanning from off-line plan generation to on-line plan management. Many of the things\nin this library have been published in conference papers. Have a look at https://scholar.google.it/citations?user=lgfpklAAAAAJ&hl=en for details on the methodological aspects\n\nIn this library there are also the main program for each of the project (nhsp, fastrp,smtplanner) developed, but you can use them also as separate modules\n
application.title=PPMaJal2 is the java library for reasoning over hybrid planning problems
application.vendor=Enrico Scala
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.eclipseFormatterActiveProfile=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.eclipseFormatterEnabled=false
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.eclipseFormatterLocation=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.enableFormatAsSaveAction=false
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.linefeed=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.preserveBreakPoints=true
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.SaveActionModifiedLinesOnly=false
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.showNotifications=true
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.sourcelevel=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.useProjectPref=true
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter46.useProjectSettings=false
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.form,**/*.java
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/PPMaJal3.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.antlr-3.4-complete.jar=lib/antlr-3.4-complete.jar
file.reference.commons-collections4-4.3.jar=../../../Dropbox/plan_exec_2_0/PPMAJAL2/lib/commons-collections4-4.3.jar
file.reference.commons-lang3-3.8.1.jar=../../../Dropbox/plan_exec_2_0/PPMAJAL2/lib/commons-lang3-3.8.1.jar
file.reference.cplex.jar=lib/cplex.jar
file.reference.fastutil-8.1.1.jar=lib/fastutil-8.1.1.jar
file.reference.guava-25.1-jre.jar=lib/guava-25.1-jre.jar
file.reference.hamcrest-core-1.3.jar=lib/hamcrest-core-1.3.jar
file.reference.hppc-0.8.0-SNAPSHOT.jar=lib/hppc-0.8.0-SNAPSHOT.jar
file.reference.ia_math.jar=lib/ia_math.jar
file.reference.jgraph-5.13.0.0.jar=lib/jgraph-5.13.0.0.jar
file.reference.jgrapht-bundle-1.3.0.jar=../../../Dropbox/plan_exec_2_0/PPMAJAL2/lib/jgrapht-1.3.0/lib/jgrapht-bundle-1.3.0.jar
file.reference.jgrapht-core-0.9.0.jar=lib/jgrapht-core-0.9.0.jar
file.reference.jgrapht-core-0.9.1.jar=lib/jgrapht-core-0.9.1.jar
file.reference.jgrapht-core-0.9.1.jar-1=../../../Dropbox/plan_exec_2_0/PPMAJAL2/lib/jgrapht-core-0.9.1.jar
file.reference.jgrapht-demo-0.9.1.jar=lib/jgrapht-demo-0.9.1.jar
file.reference.jgrapht-ext-0.9.0.jar=lib/jgrapht-ext-0.9.0.jar
file.reference.jgrapht-ext-0.9.1-uber.jar=lib/jgrapht-ext-0.9.1-uber.jar
file.reference.jgrapht-ext-0.9.1.jar=lib/jgrapht-ext-0.9.1.jar
file.reference.jgraphx-2.0.0.1.jar=lib/jgraphx-2.0.0.1.jar
file.reference.json-simple-1.1.1.jar=lib/json-simple-1.1.1.jar
file.reference.junit-4.12.jar=lib/junit-4.12.jar
file.reference.ojalgo-40.0.0.jar=lib/ojalgo-40.0.0.jar
file.reference.ojalgo-biz-40.0.0.jar=lib/ojalgo-biz-40.0.0.jar
file.reference.ojalgo-ext-40.0.0.jar=lib/ojalgo-ext-40.0.0.jar
file.reference.ppmajal2-src=src
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.antlr-3.4-complete.jar}:\
    ${file.reference.cplex.jar}:\
    ${file.reference.ia_math.jar}:\
    ${file.reference.jgraph-5.13.0.0.jar}:\
    ${file.reference.guava-25.1-jre.jar}:\
    ${file.reference.jgrapht-core-0.9.0.jar}:\
    ${file.reference.jgrapht-core-0.9.1.jar}:\
    ${file.reference.jgrapht-demo-0.9.1.jar}:\
    ${file.reference.jgrapht-ext-0.9.0.jar}:\
    ${file.reference.jgrapht-ext-0.9.1-uber.jar}:\
    ${file.reference.jgrapht-ext-0.9.1.jar}:\
    ${file.reference.jgraphx-2.0.0.1.jar}:\
    ${file.reference.json-simple-1.1.1.jar}:\
    ${file.reference.ojalgo-40.0.0.jar}:\
    ${file.reference.ojalgo-biz-40.0.0.jar}:\
    ${file.reference.ojalgo-ext-40.0.0.jar}:\
    ${file.reference.junit-4.12.jar}:\
    ${file.reference.hamcrest-core-1.3.jar}:\
    ${file.reference.fastutil-8.1.1.jar}:\
    ${file.reference.hppc-0.8.0-SNAPSHOT.jar}:\
    ${file.reference.commons-collections4-4.3.jar}:\
    ${file.reference.commons-lang3-3.8.1.jar}:\
    ${file.reference.jgrapht-core-0.9.1.jar-1}:\
    ${file.reference.jgrapht-bundle-1.3.0.jar}
# Space-separated list of extra javac options
javac.compilerargs=-g
javac.deprecation=true
javac.external.vm=false
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.modulepath=\
    ${javac.modulepath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=true
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=true
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=NHSP
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.license=lgpl21
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=${file.reference.ppmajal2-src}
test.tests.dir=tests
